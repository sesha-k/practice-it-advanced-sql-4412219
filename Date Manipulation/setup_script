-- Create the Events table
CREATE TABLE IF NOT EXISTS Events (
    EventID INTEGER PRIMARY KEY AUTOINCREMENT,
    EventName VARCHAR(100) NOT NULL,
    EventDate DATE,
    EventLocation VARCHAR(100),
    TicketPrice DECIMAL(10, 2)
);

-- Insert sample data into the Events table
INSERT INTO Events (EventName, EventDate, EventLocation, TicketPrice)
VALUES
    ('Concert in the Park', '2023-07-15', 'Central Park', 25.00),
    ('Tech Conference', '2023-08-20', 'Convention Center', 150.00),
    ('Art Exhibition', '2023-09-10', 'Art Gallery', 10.00),
    ('Sports Tournament', '2023-10-05', 'Stadium', 35.00),
    ('Holiday Gala', '2023-12-20', 'Grand Hotel', 75.00);

with gapCte as(
    select e1.EventName as "Event1 Name",e2.EventName as "Event2 Name",e1.EventDate as "Event1",e2.EventDate as "Event2"
    from Events e1 join Events e2 on e1.EventDate<e2.EventDate

)
select *, MAX(JULIANDAY(Event2)-JULIANDAY(Event1)) as longestGap
from gapCte

--Monthly Revenue
    select  strftime('%m-%Y',EventDate) as 'Month-Year',
    SUM(TicketPrice) as 'Total Revenue' from Events 
    group by 1
    order by 1